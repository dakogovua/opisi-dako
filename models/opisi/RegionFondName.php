<?php

namespace app\models\opisi;

use Yii;

/**
 * This is the model class for table "region_fond_name".
 *
 * @property int $id
 * @property string $fond_name
 * @property int $tag_link_id
 */
class RegionFondName extends \yii\db\ActiveRecord
{
//    public $tagNames;
   public $tags;
//    public $newtags;


    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'region_fond_name';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
//            [['tag_link_id'], 'integer'],
            [['fond_name'], 'string', 'max' => 500],
            [['tagNames', 'tags'], 'safe']
            
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'fond_name' => 'Назва установи',
//            'tag_link_id' => 'Tag Link ID',
            'tags' => 'Tagz',
            'tagsString' => 'Теги',
            'tagNames' => 'Tag'
        ];
    }

    public function beforeDelete()
    {

        if (parent::beforeDelete()) {
            RegionTagLink::deleteAll('fond_name_id = '.$this->id.'');
            return true;
        }

        // ...custom code here...
        return false;
    }




    public function afterFind()
    {
        $this->tags = $this->tagNames;

    }



    public function afterSave($insert, $changedAttributes)
    {


        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
//        print_r($this);
//        exit();

        RegionTagLink::deleteAll('fond_name_id = '.$this->id.'');

            if (is_array($this->tags)){
                foreach ($this->tags as $tag)
                    {

                        $newtag = RegionTagName::find()->where(['id' => $tag])->all();
                        // $idnew;
                        if (sizeof($newtag) == 0){

                            $tagnew = new RegionTagName();
                            $tagnew->tag_name = $tag;

                            $tagnew->save(false);
                            $idnew = $tagnew->getPrimaryKey();


                        }


                        $model = new RegionTagLink();
                        $model->fond_name_id = $this->id;
                        $model->tag_id = (sizeof($newtag) == 0) ? $idnew : $tag;

                        $model->save();
                    }

                }
        }

    public function getTagNames()
    {
        return $this->hasMany(RegionTagName::className(), ['id' => 'tag_id'])
            ->viaTable(RegionTagLink::tableName(), ['fond_name_id' => 'id']);
    }

    public function getTagsString()
    {
        $arr = \yii\helpers\ArrayHelper::map($this->tags,'id', 'tag_name');

        return implode(", ", $arr);
    }

}
